// **********************************************************************
// Parsed By TarsParser(1.1.0), Generated By tars2node(20190529)
// TarsParser Maintained By <TARS> and tars2node Maintained By <superzheng>
// Generated from "node.tars" by Server Mode
// **********************************************************************

/* eslint-disable */

"use strict";

var assert    = require("assert");
var TarsStream = require("@tars/stream");
var TarsError  = require("@tars/rpc").error;

var Demo = Demo || {};
module.exports.Demo = Demo;

Demo.HelloImp = function () { 
    this._name   = undefined;
    this._worker = undefined;
};

Demo.HelloImp.prototype.initialize = function () {};

Demo.HelloImp.prototype.onDispatch = function (current, funcName, binBuffer) { 
    if ("__" + funcName in this) {
        return this["__" + funcName](current, binBuffer);
    } else {
        return TarsError.SERVER.FUNC_NOT_FOUND;
    }
};

var __Demo_Hello$tars_ping$RE = function (_ret) {
    if (this.getRequestVersion() === TarsStream.Tup.TUP_SIMPLE || this.getRequestVersion() === TarsStream.Tup.TUP_COMPLEX) {
        var tup = new TarsStream.UniAttribute();
        tup.tupVersion = this.getRequestVersion();
        tup.writeInt32("", _ret);

        this.doResponse(tup.encode());
    } else {
        var os = new TarsStream.TarsOutputStream();
        os.writeInt32(0, _ret);

        this.doResponse(os.getBinBuffer());
    }
};

Demo.HelloImp.prototype.__tars_ping = function (current) {
    __Demo_Hello$tars_ping$RE.call(current, 0);

    return TarsError.SUCCESS;
};

Demo.HelloImp.prototype.ping = function () {
    assert.fail("ping function not implemented");
};

var __Demo_Hello$ping$RE = function (_ret) {
    if (this.getRequestVersion() === TarsStream.Tup.TUP_SIMPLE || this.getRequestVersion() === TarsStream.Tup.TUP_COMPLEX) {
        var tup = new TarsStream.UniAttribute();
        tup.tupVersion = this.getRequestVersion();
        tup.writeString("", _ret);

        this.doResponse(tup.encode());
    } else {
        var os = new TarsStream.TarsOutputStream();
        os.writeString(0, _ret);

        this.doResponse(os.getBinBuffer());
    }
};

Demo.HelloImp.prototype.__ping = function (current) {
    current.sendResponse = __Demo_Hello$ping$RE;

    this.ping(current);

    return TarsError.SUCCESS;
};





